x-common-variables: &common-variables
  # Database settings
  SQL_ENGINE: django.db.backends.postgresql
  SQL_DATABASE: devbb
  SQL_USER: devbb
  SQL_PASSWORD: devbb
  SQL_HOST: db
  SQL_PORT: 5432

  # Redis settings (pubsub / cache)
  REDIS_HOST: redis
  REDIS_CACHE_URL: redis://redis:6389/0

  MEDIA_ROOT: /media
  MEILISEARCH_ENABLED: 1
  MEILISEARCH_SERVER_ADDRESS: http://searchdb:7700
  MEILISEARCH_MASTERKEY: masterKey

  # Django settings
  SECRET_KEY:
  DJANGO_ALLOWED_HOSTS: "localhost 127.0.0.1 [::1] *" # Django settings ALLOWED_HOSTS
  CSRF_TRUSTED_ORIGINS: "http://localhost"
  DEBUG: 1
  RUN_ASYNC_JOBS_SYNC: 0
  DJANGO_LOG_LEVEL: DEBUG

  # OAuth settings
  OKTA_BASE_URL:
  OKTA_CLIENT_ID:
  OKTA_SECRET_KEY:
  GOOGLE_CLIENT_ID:
  GOOGLE_SECRET_KEY:
  FACEBOOK_CLIENT_ID:
  FACEBOOK_SECRET_KEY:

  # EMAIL SETTINGS
  SEND_EMAILS: 0
  #EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
  EMAIL_HOST: smtp.gmail.com
  EMAIL_PORT: 587
  EMAIL_HOST_USER:
  DEFAULT_FROM_EMAIL:
  EMAIL_HOST_PASSWORD:
  DEBUG_EMAIL_TO:

  # Forum settings
  MIN_QUESTION_CONTENT_LENGTH: 20
  MAX_QUESTION_CONTENT_LENGTH: 20000
  MIN_QUESTION_TITLE_LENGTH: 15
  MAX_QUESTION_TITLE_LENGTH: 150
  MAX_ANSWERS_ON_QUESTION: 3
  QUESTIONS_PER_PAGE: 20
  ALLOW_ANONYMOUS_QUESTION: 0
  MAX_SIZE_KB_IMAGE_UPLOAD: 512

x-healthcheck-defaults: &healthcheck-defaults
  interval: 10s
  timeout: 5s
  retries: 5

x-depends-on-defaults: &depends-on-defaults
  redis:
    condition: service_healthy
  db:
    condition: service_healthy
  wiwik_image:
    condition: service_completed_successfully


services:
  searchdb:
    image: getmeili/meilisearch:v1.8.3
    ports:
      - "7700:7700"
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_MASTERKEY:-masterKey}
      - MEILI_NO_ANALYTICS=${MEILI_NO_ANALYTICS:-true}
      - MEILI_ENV=${MEILI_ENV:-development}
      - MEILI_DB_PATH=${MEILI_DB_PATH:-/data.ms}
    volumes:
      - "./data.ms:/data.ms"
    networks:
      - wiwik-network

  db:
    image: postgres:16-alpine
    volumes:
      - "./postgres_data/:/var/lib/postgresql/data/"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: devbb
      POSTGRES_PASSWORD: devbb
      POSTGRES_DB: devbb
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD-SHELL", "pg_isready" ]
    networks:
      - wiwik-network

  redis:
    image: redis/redis-stack-server:7.2.0-v11
    ports:
      - "6379:6379"
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "redis-cli","ping" ]
    networks:
      - wiwik-network

  wiwik_image:
    image: wiwik_image
    command: [ 'echo', 'build completed' ]
    build:
      context: .
      dockerfile: Dockerfile

  wiwik_migrate:
    image: wiwik_image
    command: [ "python", "manage.py", "migrate" ]
    networks:
      - wiwik-network
    volumes:
      - ./forum/:/usr/src/app/
    env_file:
      - ./.env
    environment:
      <<: *common-variables
    depends_on:
      <<: *depends-on-defaults

  wiwik_populate_search:
    image: wiwik_image
    command: [ "python", "manage.py", "run_job", "populate_meilisearch" ]
    networks:
      - wiwik-network
    volumes:
      - ./forum/:/usr/src/app/
    env_file:
      - ./.env
    environment:
      <<: *common-variables
    depends_on:
      - wiwik_migrate
      - searchdb

  wiwik_web:
    image: wiwik_image
    command: [ "python", "manage.py", "runserver", "0.0.0.0:8000" ]
    volumes:
      - ./forum/:/usr/src/app/
      - type: bind
        source: /Users/style/PycharmProjects/wiwik-insiders/forum/media
        target: /media
        volume:
          nocopy: true
    ports:
      - "8000:8000"
    networks:
      - wiwik-network
    env_file:
      - ./.env
    environment:
      <<: *common-variables
    depends_on:
      <<: *depends-on-defaults

  wiwik_worker: # Running all queues
    profiles:
      - worker
    image: wiwik_image
    command: [ "python", "manage.py", "rqworker", "cron", "default" ]
    #    command: [ "python", "manage.py", "rqworker", "--with-scheduler","cron", "default" ]
    volumes:
      - ./forum/:/usr/src/app/
    networks:
      - wiwik-network
    environment:
      <<: *common-variables
    depends_on:
      <<: *depends-on-defaults

networks:
  wiwik-network:
    driver: bridge

